{"version":3,"sources":["pages/mainPage.jsx","pages/projectListPage.jsx","pages/contactPage.jsx","pages/aboutPage.jsx","threeSrc/hello-cube.js","components/HelloCubeWrapper.js","components/HelloCubeWrapper2.js","pages/projectIndividualPage.jsx","components/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["MainPage","ProjectsListPage","to","target","ContactPage","AboutPage","sceneReference","camera","scene","renderer","geometry","material","mesh","xchange","ychange","document","addEventListener","THREE","window","innerWidth","innerHeight","position","z","add","antialias","setSize","appendChild","domElement","animate","requestAnimationFrame","rotation","x","y","render","HelloCubeWrapper","helloCube","this","ref","element","Component","HelloCubeWrapper2","ProjectIndividualPage","props","state","id","match","params","handleAppBarClick","url","location","hash","useStyles","makeStyles","theme","createStyles","root","flexGrow","title","Header","classes","className","AppBar","Toolbar","Typography","variant","Button","color","onClick","App","basename","exact","path","component","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.afe7c3c7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\n//import * as constants from '../constants/constants.js';\r\n\r\nfunction MainPage() {\r\n    return (\r\n        <div>\r\n            <h1>Hello there : Main Page</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainPage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\n//import * as constants from '../constants/constants.js';\r\n\r\nexport default function ProjectsListPage() {\r\n    return (\r\n        <div>\r\n            <h1>List of projects</h1>\r\n            <Link to={\"/example/0\"} target=\"_blank\" >Link to project 0</Link>\r\n            <br/>\r\n            <Link to={\"/example/1\"} target=\"_blank\">Link to project 1</Link>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\n//import * as constants from '../constants/constants.js';\r\n\r\nexport default function ContactPage() {\r\n    return (\r\n        <div>\r\n            <h1>Contact</h1>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n//import * as constants from '../constants/constants.js';\r\n\r\nexport default function AboutPage() {\r\n    return (\r\n        <div>\r\n            <h1>About</h1>\r\n        </div>\r\n    );\r\n}","import * as THREE from '../../node_modules/three/build/three.module.js';\r\n\r\nexport default function(sceneReference) {\r\n    var camera, scene, renderer;\r\n    var geometry, material, mesh;\r\n    var xchange, ychange;\r\n\r\n    document.addEventListener('click', speedUp);\r\n    init();\r\n    animate();\r\n\r\n    function init() {\r\n\r\n        camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 0.01, 10 );\r\n        camera.position.z = 1;\r\n\r\n        scene = new THREE.Scene();\r\n\r\n        xchange = .01;\r\n        ychange = .02;\r\n\r\n        geometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );\r\n        material = new THREE.MeshNormalMaterial();\r\n\r\n        mesh = new THREE.Mesh( geometry, material );\r\n\r\n       \r\n\r\n        scene.add( mesh );\r\n\r\n        renderer = new THREE.WebGLRenderer( { antialias: true } );\r\n        renderer.setSize( window.innerWidth/2, window.innerHeight/2 );\r\n\r\n        sceneReference.appendChild(renderer.domElement);\r\n        \r\n    }\r\n\r\n    function speedUp(){\r\n\r\n        xchange = xchange + .01;\r\n        ychange = ychange + .02;\r\n    }\r\n    function animate() {\r\n\r\n        requestAnimationFrame( animate );\r\n\r\n        mesh.rotation.x += xchange;\r\n        mesh.rotation.y += ychange;\r\n\r\n        renderer.render( scene, camera );\r\n\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link} from 'react-router-dom';\r\nimport helloCube from '../threeSrc/hello-cube';\r\n\r\nexport default class HelloCubeWrapper extends Component {\r\n    componentDidMount(){\r\n        helloCube(this.scene);\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div ref={element => this.scene = element} />\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport helloCube from '../threeSrc/hello-cube';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nexport default class HelloCubeWrapper2 extends Component {\r\n    componentDidMount(){\r\n        helloCube(this.scene);\r\n        helloCube(this.scene);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div ref={element => this.scene = element} />\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport HelloCubeWrapper from '../components/HelloCubeWrapper.js';\r\nimport HelloCubeWrapper2 from '../components/HelloCubeWrapper2.js';\r\n\r\nexport default class ProjectIndividualPage extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.match.params.id\r\n        };\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1>This is project {this.state.id}</h1>\r\n\r\n                {this.state.id === '0' && <HelloCubeWrapper/>}\r\n                {this.state.id === '1' && <HelloCubeWrapper2/>}\r\n                \r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nfunction handleAppBarClick(url) {\r\n  window.location.hash = url;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }),\r\n);\r\n\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <AppBar position=\"fixed\">\r\n                <Toolbar className={classes.title}>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                       Sam Weninger\r\n                    </Typography>\r\n                    <Button color=\"inherit\" onClick={() => handleAppBarClick('/')}>Home</Button>\r\n                    <Button color=\"inherit\" onClick={() => handleAppBarClick('/about')}>About</Button>\r\n                    <Button color=\"inherit\" onClick={() => handleAppBarClick('/projects')}>Projects</Button>\r\n                    <Button color=\"inherit\" onClick={() => handleAppBarClick('/contact')}>Contact</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Toolbar/>{/* This is used to make sure the fixed appbar does not cover up anything directly below it */}\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport { HashRouter, Route, Switch} from 'react-router-dom';\nimport MainPage from './pages/mainPage.jsx';\nimport ProjectsListPage from './pages/projectListPage.jsx';\nimport ContactPage from './pages/contactPage.jsx';\nimport AboutPage from './pages/aboutPage.jsx';\nimport ProjectIndividualPage from './pages/projectIndividualPage.jsx';\n\nimport Header from './components/Header.jsx';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div>\n      <Header/>\n\n      <HashRouter basename=\"/\">\n        <Switch>\n          <Route exact path={\"/\"} render={() => {return(<MainPage/>);}}/>\n          <Route exact path={\"/projects\"} render={() => {return(<ProjectsListPage/>);}}/>\n          <Route exact path={\"/contact\"} render={() => {return(<ContactPage/>);}}/>\n          <Route exact path={\"/about\"} render={() => {return(<AboutPage/>);}} />\n          <Route exact path={\"/example/:id\"} render={(props) => <ProjectIndividualPage {...props}/>}/>\n          <Route component={() => (<div>404 Not found </div>)} />\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}